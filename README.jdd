~/dev/py/pzog/README

2012-06-03

Initial specs:

    * pzog v0.1, python implementation of zog daemon, listens on 55551,
        logging any connection to either access.log or error.log, with
        CRLF terminated messages of reasonable length (<512 bytes) being
        logged to access.log and all other messages reported to error.log
    * libpsprog v0.1, python implementation of sprog client, with psprog
        script; defaults to talking to port 55551

2012-07-07

V0.2 OBJECTIVES [amended: see 09-25 notes below]

Build a pzog ring running on {la, test, lg, sm, g}.  All servers listen
on 55552.  Each keeps a connection open to all others (seen as +1, +2, +3, +4).
Each server has to send a keep-alive every 300s to keep a connection open.

On receiving a message other than a keep-alive from a client, a server will
forward it to its +1 and +2 peers with +1 and +2 wrappings respectively.

On receiving a message from a peer, a server will examine its envelope.
All messages will be logged AFTER any forwarding.

If the wrapping is zero, the message will just be logged.  If the wrapping
is +1, the message will be forwarded to the peer's +3 server with a zero
wrapping.  If the wrapping is +2, the message will be forwarded to the
+4 server with a zero wrapping.

In this implementation the wrapping is a single byte prepended to the
message.  The byte will be one of '0', '1', or '2'.  That is, it will be
a single ASCII character.

At least one psprog client will run, probably on PaloAlto. By default the
client will send messages at configurable intervals to a randomly selected
server (one of LA=0, T=1, LG=2, SM=3, or G=4).  Command line switches will
be available to change this behavior, to round-robin (-r/--roundRobin) or
to target a specific host (-s/--specificHost).  If the testing option
is chosen, specificHost will be 127.0.0.1.

The default interval should be 10s.

Content will be quasi-random with lengths (-i/--interval) in the range
[32..63] inclusive, not counting the 'wrapping' byte.  Content will
consist of printing characters.  [Content length should be adjusted as
necessary to keep log lines within 80 characters.]

2012-09-25

V0.2.2 OBJECTIVES, AMENDING THE ABOVE

On receiving a message from a client which is other than a keep-alive 
a server will forward it to its +1 and +2 peers with a +2 wrapping
in each case.

If the wrapping is zero, the message will just be logged.  

If the wrapping is +1, the message will be forwarded to the receiver's 
+1 peer with a zero wrapping.  [We will not use this wrapping in the
current configuration.]

If the wrapping is +2, the message will be forwarded to the
receiver's +2 peer with a zero wrapping.

pzog protocol should be org.xlattice.pzog and should at this point
define two message pairs: keepAlive and ack, and data and ok.  
